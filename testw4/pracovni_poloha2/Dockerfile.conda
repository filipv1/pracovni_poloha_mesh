# Dockerfile s conda environment replikací
FROM continuumio/miniconda3:latest

WORKDIR /app

# Copy environment files
COPY requirements.txt runtime.txt ./

# Create conda environment identical k trunk_analysis
RUN conda create -n trunk_analysis python=3.9.18 -y && \
    echo "source activate trunk_analysis" > ~/.bashrc
ENV PATH /opt/conda/envs/trunk_analysis/bin:$PATH

# Aktivace environment a instalace dependencies
RUN conda activate trunk_analysis && \
    pip install --no-cache-dir mediapipe==0.10.8 && \
    pip install --no-cache-dir opencv-python==4.8.1.78 && \
    pip install --no-cache-dir numpy==1.24.3 && \
    pip install --no-cache-dir matplotlib==3.7.2 && \
    pip install --no-cache-dir Flask==3.0.0 && \
    pip install --no-cache-dir tqdm==4.66.1 && \
    pip install --no-cache-dir openpyxl==3.1.2 && \
    pip install --no-cache-dir requests==2.31.0 && \
    pip install --no-cache-dir Pillow==10.1.0 && \
    pip install --no-cache-dir Werkzeug==3.0.1

# Copy aplikace
COPY . .

# Storage directories
RUN mkdir -p /app/data/uploads /app/data/outputs /app/data/logs

# Environment
ENV FLASK_ENV=production
ENV PYTHONUNBUFFERED=1
ENV PORT=8080
ENV CONDA_DEFAULT_ENV=trunk_analysis

EXPOSE 8080

# Start s aktivovaným conda environment
CMD ["conda", "run", "-n", "trunk_analysis", "python", "web_app.py"]